CREATE TABLE BOOK(
ID INT NOT NULL PRIMARY KEY,
NAME VARCHAR(30),
ISBN INT,
EDITION TINYINT
);


INSERT INTO BOOK VALUES(1,'PILGRIM SOULS',9876011,1);
INSERT INTO BOOK VALUES(2,'PILGRIM SOULS',9876011,2);
INSERT INTO BOOK VALUES(3,'PYTHON FOR DATA SCIENCE',9876012,1);
INSERT INTO BOOK VALUES(4,'PYTHON FOR DATA SCIENCE',9876012,1);
INSERT INTO BOOK VALUES(5,'PYTHON FOR DATA SCIENCE',9876012,1);
INSERT INTO BOOK VALUES(6,'C# 7.0 ALL-IN-ONE',9876016,1);
INSERT INTO BOOK VALUES(7,'C# 7.0 ALL-IN-ONE',9876016,2);
INSERT INTO BOOK VALUES(8,'C PROGRAMMING ALL-IN-ONE',9876017,3);
INSERT INTO BOOK VALUES(9,'C PROGRAMMING ALL-IN-ONE',9876017,3);
INSERT INTO BOOK VALUES(10,'JAVA PROGRAMMING FOR EVERYONE',9876018,1);


SELECT * FROM BOOK;




CREATE TABLE AUTHOR(
ID INT NOT NULL PRIMARY KEY,
FIRST_NAME VARCHAR(30),
LAST_NAME VARCHAR(30)
);


INSERT INTO AUTHOR VALUES(1,'HORTSMAN','CAY S');
INSERT INTO AUTHOR VALUES(2,'JOHN PAUL','MUELLER');
INSERT INTO AUTHOR VALUES(3,'MIKE','CHAPPLE');
INSERT INTO AUTHOR VALUES(4,'BARBARA','WALTER');



SELECT * FROM AUTHOR;




CREATE TABLE BOOK_DETAILS(
BOOK_ID INT NOT NULL PRIMARY KEY,
AUTHOR_ID INT
);


INSERT INTO BOOK_DETAILS VALUES(1,1);
INSERT INTO BOOK_DETAILS VALUES(2,1);
INSERT INTO BOOK_DETAILS VALUES(3,4);
INSERT INTO BOOK_DETAILS VALUES(4,4);
INSERT INTO BOOK_DETAILS VALUES(5,4);
INSERT INTO BOOK_DETAILS VALUES(6,2);
INSERT INTO BOOK_DETAILS VALUES(7,2);
INSERT INTO BOOK_DETAILS VALUES(8,3);
INSERT INTO BOOK_DETAILS VALUES(9,3);
INSERT INTO BOOK_DETAILS VALUES(10,2);



SELECT * FROM BOOK_DETAILS;




CREATE TABLE BOOK_REQUEST(
DUE_DATE DATE,
IS_ACTIVE tinyint not null check(IS_ACTIVE in(0,1)),
CUSTOMER INT,
BOOK_ID INT,
LIBRARIAN INT
);



INSERT INTO BOOK_REQUEST VALUES('2021-02-01',1,113,1,20211);
INSERT INTO BOOK_REQUEST VALUES('2021-02-11',1,116,8,20211);
INSERT INTO BOOK_REQUEST VALUES('2021-01-28',1,116,3,20233);
INSERT INTO BOOK_REQUEST VALUES('2021-01-15',0,111,7,20211);
INSERT INTO BOOK_REQUEST VALUES('2021-02-08',0,113,5,20233);
INSERT INTO BOOK_REQUEST VALUES('2021-02-08',1,113,4,20233);




SELECT * FROM BOOK_REQUEST;



CREATE TABLE CUSTOMER(
ID INT NOT NULL PRIMARY KEY,
NAME VARCHAR(20),
ADDRESS VARCHAR(30)
);



INSERT INTO CUSTOMER VALUES(111,'KALA','03 RANJITH ST');
INSERT INTO CUSTOMER VALUES(112,'AMY','6 HUDSON ST');
INSERT INTO CUSTOMER VALUES(113,'AJAY','56 MURUGAPPA ST');
INSERT INTO CUSTOMER VALUES(114,'BASKER','23 BLUE ST');
INSERT INTO CUSTOMER VALUES(115,'BELLA','10 NEW ST');
INSERT INTO CUSTOMER VALUES(116,'CYNTHIA','107 PART ST');
INSERT INTO CUSTOMER VALUES(117,'ZARA','34 LOMBARD ST');



SELECT * FROM CUSTOMER;



CREATE TABLE LIBRARIANS(
ID INT NOT NULL PRIMARY KEY,
NAME VARCHAR(30)
);



INSERT INTO LIBRARIANS VALUES(20211,'JULIA ROOSEVELT');
INSERT INTO LIBRARIANS VALUES(20233,'TOM WHITE');



SELECT * FROM LIBRARIANS;



1.ANS:

SELECT BOOK.NAME AS BOOK_NAME,BOOK.ISBN,BOOK.EDITION,AUTHOR.FIRST_NAME,AUTHOR.LAST_NAME
FROM BOOK
JOIN BOOK_DETAILS
ON BOOK.ID=BOOK_DETAILS.BOOK_ID
JOIN AUTHOR
ON AUTHOR.ID=BOOK_DETAILS.AUTHOR_ID;



2.ANS:

SELECT BOOK.NAME AS BOOK_NAME,AUTHOR.ID AS AUTHOR_ID,AUTHOR.FIRST_NAME AS AUTHOR_NAME
FROM BOOK
JOIN AUTHOR
JOIN BOOK_DETAILS
ON BOOK.ID=BOOK_DETAILS.BOOK_ID AND AUTHOR.ID=BOOK_DETAILS.AUTHOR_ID
WHERE BOOK.NAME LIKE '%PROGRAMMING%' ORDER BY BOOK.NAME;



3.ANS:

SELECT BOOK.NAME AS BOOK_NAME,BOOK_REQUEST.DUE_DATE,CUSTOMER.NAME AS CUSTOMER_NAME
FROM BOOK
JOIN BOOK_REQUEST
JOIN CUSTOMER
ON BOOK.ID=BOOK_REQUEST.BOOK_ID AND CUSTOMER.ID=BOOK_REQUEST.CUSTOMER
WHERE BOOK_REQUEST.IS_ACTIVE=0;




4.ANS:

SELECT DISTINCT NAME,ISBN,EDITION FROM BOOK;



5.ANS:

SELECT BOOK.NAME AS BOOK_NAME,CUSTOMER.NAME AS CUSTOMER_NAME,LIBRARIANS.NAME AS LIBRARIANS_NAME FROM BOOK
JOIN BOOK_REQUEST
JOIN CUSTOMER
JOIN LIBRARIANS
ON BOOK_REQUEST.BOOK_ID=BOOK.ID AND CUSTOMER.ID=BOOK_REQUEST.CUSTOMER AND LIBRARIANS.ID=BOOK_REQUEST.LIBRARIAN LIMIT 3; 



6.ANS:


SELECT CUSTOMER.ID AS CUSTOMER_ID,CUSTOMER.NAME AS CUSTOMER_NAME,IF(DATEDIFF('2021-01-20',DUE_DATE)>0,DATEDIFF('2021-01-20',DUE_DATE),"0") AS FINE_AMOUNT
FROM CUSTOMER
LEFT JOIN BOOK_REQUEST
ON CUSTOMER.ID=BOOK_REQUEST.CUSTOMER AND BOOK_REQUEST.IS_ACTIVE=0 ORDER BY CUSTOMER_ID;


7.ANS:

SELECT LIBRARIANS.NAME AS LIBRARIAN_NAME,COUNT(BOOK_REQUEST.BOOK_ID) AS NO_OF_BOOKS
FROM LIBRARIANS
JOIN BOOK_REQUEST
ON LIBRARIANS.ID=BOOK_REQUEST.LIBRARIAN GROUP BY LIBRARIANS.NAME;




8.ANS:

SELECT CUSTOMER.NAME AS CUSTOMER_NAME,BOOK.NAME AS BOOK_NAME,BOOK.EDITION AS BOOK_EDITION,AUTHOR.FIRST_NAME FROM CUSTOMER
JOIN BOOK
JOIN AUTHOR
JOIN BOOK_REQUEST
JOIN BOOK_DETAILS
ON CUSTOMER.ID=BOOK_REQUEST.CUSTOMER AND BOOK.ID=BOOK_DETAILS.BOOK_ID AND AUTHOR.ID=BOOK_DETAILS.AUTHOR_ID AND BOOK_REQUEST.BOOK_ID=BOOK.ID
GROUP BY CUSTOMER_NAME,BOOK_NAME HAVING COUNT(BOOK_NAME)>1;



9.ANS:


SELECT CUSTOMER.ID,CUSTOMER.NAME,CUSTOMER.ADDRESS 
FROM CUSTOMER
WHERE CUSTOMER.ID NOT IN (SELECT CUSTOMER FROM BOOK_REQUEST)
ORDER BY CUSTOMER.ID DESC;









